<%- include('header.ejs') %>
<style>
  body {
      font-family: 'Roboto', sans-serif;
      background-color: #f6f6e6;
      color: #333;
      line-height: 1.6;
      margin: 0;
      padding: 0;
  }
  .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 2rem;
  }
  h1 {
      font-family: 'Playfair Display', serif;
      font-size: 2.5rem;
      color: #2c3e50;
      text-align: center;
      margin-bottom: 2rem;
  }
  .wishlist-table {
      width: 100%;
      border-collapse: collapse;
      background-color: #fff;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
  }
  .wishlist-table th, .wishlist-table td {
      padding: 1rem;
      text-align: left;
      border-bottom: 1px solid #e0e0e0;
  }
  .wishlist-table th {
      background-color: #ccccbb;
      font-weight: 500;
      text-transform: uppercase;
      font-size: 0.9rem;
      color: #2c3e50;
  }
  .wishlist-table img {
      max-width: 80px;
      height: auto;
      border-radius: 4px;
  }
  .remove-btn, .add-to-cart-btn {
      background-color: #3498db;
      color: #fff;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.3s ease;
  }
  .remove-btn:hover, .add-to-cart-btn:hover {
      background-color: #2980b9;
  }
  .remove-btn {
      background-color: #e74c3c;
  }
  .remove-btn:hover {
      background-color: #c0392b;
  }
  .stock-status {
      font-weight: 500;
  }
  .in-stock {
      color: #27ae60;
  }
  .out-of-stock {
      color: #e74c3c;
  }
</style>

<div class="container">
  <div class="row" style="margin-top:53 px !important;">
    <div class="col-lg-8" >
    <h1>My Cart</h1>
    <table class="wishlist-table">
        <thead>
            <tr>
                <th style="background-color: #ccccbb !important;">Product</th>
                <th style="background-color: #ccccbb !important;">Price</th>
                <th style="background-color: #ccccbb !important;">Quantity</th>
                <th style="background-color: #ccccbb !important;">Total</th>
                <th style="background-color: #ccccbb !important;">Actions</th>
            </tr>
        </thead>
        <tbody>
            <% let subtotal = 0; %>
            <% cartItems.forEach((item) => { %>
                <% const itemPrice = parseFloat(item.product.discountedPrice || item.product.price); %>
                <% const itemTotal = itemPrice * item.qty; %>
                <% subtotal += itemTotal; %>
                <tr>
                    <td style="background-color: #e6e6dc !important;">
                        <img src="/uploads/<%= item.product.image_url[0] %>" alt="<%= item.product.product_title %>">
                        <%= item.product.product_title %>
                    </td>
                    <td style="background-color: #e6e6dc !important;">$<%= itemPrice.toFixed(2) %></td>
                    <td style="background-color: #e6e6dc !important;">
                        <div class="quantity-container">
                            <button type="button" style="background-color: #e6e6dc; border: none; color: black; cursor: pointer;" onclick="updateQty('<%= item.product._id %>', 'decrement', <%= itemPrice %>, event)">-</button>
                            <span class="qty-label" id="qty-<%= item.product._id %>"><%= item.qty %></span>
                            <button type="button"  style="background-color: #e6e6dc; border: none; color: black; cursor: pointer;" onclick="updateQty('<%= item.product._id %>', 'increment', <%= itemPrice %>, event)">+</button>
                        </div>
                    </td>
                    <td style="background-color: #e6e6dc !important;" id="total-<%= item.product._id %>">$<%= itemTotal.toFixed(2) %></td>
                    <td style="background-color: #e6e6dc !important;" class="wishlist-remove">
                        <button style="background-color: #e6e6dc; border: none; color: black;" class="remove-btn" onclick="removeFromCart('<%= item.product._id %>')" aria-label="Remove <%= item.product.product_title %> from cart">
                            <i class="dlicon ui-1_simple-remove"></i>
                        </button>
                    </td>
                </tr>
            <% }); %>
        </tbody>
    </table>
    </div>
    
      <div class="col-lg-4">
    <% if(cartItems.length === 0){ %>
      <div class="col-lg-4">
        <div class="grand-total-wrap" style="margin-top: 5rem; text-align: right;width: 340px; background-color: #e6e6dc;">
            <h4 style="text-align: start; font-weight: 500 !important; color: #333 !important; font-size: 31px !important;">Cart totals</h4>
            <div class="grand-total-content">
                <p style="text-align: start; color: #4c4a4a !important; font-size: 18px !important;">Subtotal: <span id="subtotal">$<%= subtotal.toFixed(2) %></span></p>
                <p style="text-align: start; color: #4c4a4a !important; font-size: 18px !important;">Total: <span id="total">$<%= subtotal.toFixed(2) %></span></p>
            </div>
            <div class="grand-btn" style="margin-top: 1rem;">
                <a id="checkout-link" href="javascript:void(0);" style="background-color: #ccccbb; color: #494948; padding: 0.5rem 1rem; text-decoration: none; border-radius: 4px; height: 52px; font-size: 19px;">Proceed to checkout</a>
            </div>
        </div>
    </div>
  
 
<% }else{ %>    
    <div class="grand-total-wrap" style="margin-top: 5rem; text-align: right; background-color: #e6e6dc;">
        <h4 style="text-align: start;     font-weight: 500 !important; color: #333 !important;
        font-size: 31px !important;
       ">Cart totals</h4>
        <div class="grand-total-content">
            <p style="text-align: start; color: #4c4a4a !important; font-size: 18px !important;">Subtotal: <span id="subtotal">$<%= subtotal.toFixed(2) %></span></p>
            <p style="text-align: start; color: #4c4a4a !important; font-size: 18px !important;">Total: <span id="total">$<%= subtotal.toFixed(2) %></span></p>
        </div>
        <div class="grand-btn" style="margin-top: 1rem;">
            <a href="checkout" style="background-color: #ccccbb; color: #494948; padding: 0.5rem 1rem; text-decoration: none; border-radius: 4px; height: 52px; font-size: 19px ; ">Proceed to checkout</a>
        </div>
    </div>
    <% } %>
    </div>
  </div>
</div>



<head>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<script>
  function addToCart(product_id, qty = 1) {
    console.log(`Adding product ID: ${product_id}, Quantity: ${qty}`); // Debugging log

    fetch('/addToCart?id=' + product_id, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ product_id, qty }),
    })
    .then((response) => {
        if (!response.ok) {
          if (response.status === 409) {
            return response.json().then((data) => {
              throw new Error(data.message);
            });
          }
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        // Display success message using SweetAlert
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: data.message,
          showCancelButton: true,
          confirmButtonText: 'Go to Cart',
            cancelButtonText: 'OK',
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.href = '/cart'; // Redirect to cart page
            }
          });
      })
      .catch((error) => {
        // Check for specific error message
        if (error.message === "Product already in cart") {
          Swal.fire({
            icon: 'info',
            title: 'Product Already in Cart',
            text: 'This product is already in your cart. Would you like to view your cart?',
            showCancelButton: true,
            confirmButtonText: 'Go to Cart',
            cancelButtonText: 'Cancel',
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.href = '/cart'; // Redirect to cart page
            }
          });
        } else {
          // Generic error handling
          Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: error.message || 'Something went wrong!',
            confirmButtonText: 'Try Again',
          });
        }
      });
  }

  async function updateQty(productId, action, price, event) {
    event.preventDefault();

    try {
      const response = await fetch(`/cart/${action}Qty`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ productId }),
      });

      const data = await response.json();

      if (response.ok) {
        const qtyElement = document.getElementById(`qty-${productId}`);
        const totalElement = document.getElementById(`total-${productId}`);
        const subtotalElement = document.getElementById('subtotal');
        const totalPriceElement = document.getElementById('total');

        qtyElement.textContent = data.newQty;
        const newTotal = (data.newQty * price).toFixed(2);
        totalElement.textContent = `$${newTotal}`;

        // Update subtotal and total
        const allTotals = document.querySelectorAll('[id^="total-"]');
        let newSubtotal = 0;
        allTotals.forEach(el => {
          newSubtotal += parseFloat(el.textContent.replace('$', ''));
        });

        subtotalElement.textContent = `$${newSubtotal.toFixed(2)}`;
        totalPriceElement.textContent = `$${newSubtotal.toFixed(2)}`;
      } else {
        console.error("Failed to update quantity:", data.message);
      }
    } catch (error) {
      console.error("Error updating quantity:", error);
    }
  }

  function removeFromCart(productId) {
    fetch(`/cart/delete/${productId}`, {
      method: "POST",
    })
      .then((response) => {
        if (response.ok) {
          window.location.reload(); // Refresh the page to update the cart
        } else {
          console.error("Failed to remove item");
        }
      })
      .catch((error) => {
        console.error("Error removing item: ", error);
      });
  }

  // Function to check for overlapping quantities
  function checkOverlap() {
    const qtyElements = document.querySelectorAll('[id^="qty-"]');
    const qtyValues = {};

    qtyElements.forEach((el) => {
      const qty = el.textContent.trim();
      if (qtyValues[qty]) {
        qtyValues[qty].push(el);
      } else {
        qtyValues[qty] = [el];
      }
    });

    // Apply overlap class to duplicates
    for (const qty in qtyValues) {
      if (qtyValues[qty].length > 1) {
        qtyValues[qty].forEach((el) => {
          el.classList.add("overlap");
        });
      }
    }
  }

  // Call the function after page load
  window.onload = checkOverlap;



        // Example cart (replace with your actual data logic)
        const cart = []; // Empty cart
    
        // Handle checkout click
        const checkoutLink = document.getElementById("checkout-link");
        checkoutLink.addEventListener("click", () => {
            // Check if the cart is empty
            if (cart.length === 0) {
                Swal.fire({
                    toast: true,
                    icon: 'error',
                    title: 'Your cart is empty!',
                     position: 'center' ,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                      
                });
            } else {
                // Redirect to the checkout page
                window.location.href = "checkout";
            }
        });

    
</script>
</body></html>