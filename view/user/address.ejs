<%- include('header.ejs') %>
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="/assets/images/favicon.png"
    />
    <style>
        h1 {
      font-family: 'Playfair Display', serif;
      font-size: 2.5rem;
      color: #2c3e50;
      text-align: center;
      margin-bottom: 2rem;
  }
        .dashboard-content {
            width: 100%;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    
        .card-header h5 {
            font-weight: 600;
            color: #333;
        }
    
        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
    
        .table thead th {
            background-color: #ec7070;
            color: #fff;
            font-weight: 600;
            text-align: center;
            padding: 12px;
            border-top: none;
        }
    
        .table tbody td {
            padding: 12px;
            text-align: center;
            vertical-align: middle;
            border-bottom: 1px solid #e9ecef;
        }
    
        .table tbody tr:hover {
            background-color: #f1f3f5;
            transition: background-color 0.3s ease;
        }
    
        .badge {
            font-size: 0.875em;
            padding: 0.4em 0.8em;
            border-radius: 8px;
            text-transform: capitalize;
        }
    
        .alert-danger {
            background-color: #ff4d4d;
            color: #fff;
        }
    
        .alert-success {
            background-color: #28a745;
            color: #fff;
        }
    
        .alert-primary {
            background-color: #007bff;
            color: #fff;
        }
    
        .alert-warning {
            background-color: #ffc107;
            color: #212529;
        }
    
        .btn-sm.font-sm {
            font-size: 0.875em;
            padding: 8px 12px;
            color: #ffffff;
            background-color: #818162;
            border: 1px solid #818162;
            border-radius: 5px;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
    
        .btn-sm.font-sm:hover {
            background-color: #007bff;
            color: #fff;
        }
    
        .text-end {
            text-align: right !important;
        }
    </style>
    

      
        
        

<!-- <script>
    // Confirmation for order cancellation
    function cancelVerify(orderId) {
        const confirmCancel = confirm("Do you want to cancel the order?");
        if (confirmCancel) {
            // Call function to proceed with cancellation
            cancelOrder(orderId);
        }
    }

    async function cancelOrder(orderId) {
        try {
            const response = await fetch(`/updateOrderStatus/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status: 'Cancelled' })
            });
            const result = await response.json();
            if (result.success) {
                // Reload the page to show the updated order status
                window.location.reload();
            } else {
                alert("Failed to update status. Please try again.");
            }
        } catch (error) {
            console.error('Error:', error);
            alert("An error occurred while updating status.");
        }
    }

    // Confirmation for returning an order with a reason
    function returnOrderWithReason(orderId) {
        const confirmReturn = confirm("Do you want to return this order?");
        if (confirmReturn) {
            // Here you could include a form to capture the reason, then proceed to call the backend API
            returnOrder(orderId);
        }
    }

    async function returnOrder(orderId) {
        try {
            const response = await fetch(`/updateOrderStatus/${orderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ status: 'Returned' })
            });
            const result = await response.json();
            if (result.success) {
                window.location.reload();
            } else {
                alert("Failed to update status. Please try again.");
            }
        } catch (error) {
            console.error('Error:', error);
            alert("An error occurred while updating status.");
        }
    }
</script> -->
   

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    // SweetAlert2 for order cancellation confirmation
function cancelVerify(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to cancel the order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            cancelOrder(orderId); // Call the cancellation function
        }
    });
}

async function cancelOrder(orderId) {
    try {
        const response = await fetch(`/updateOrderStatus/${orderId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status: 'Cancelled' })
        });
        const result = await response.json();
        if (result.success) {
            Swal.fire({
                title: 'Cancelled!',
                text: 'The order has been cancelled successfully.',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                title: 'Failed!',
                text: 'Failed to cancel the order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred while processing your request.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}

// SweetAlert2 for returning an order with a reason
function returnOrderWithReason(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to return this order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#ffc107',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, return it!'
    }).then((result) => {
        if (result.isConfirmed) {
            returnOrder(orderId); // Call the return function
        }
    });
}

async function returnOrder(orderId) {
    try {
        const response = await fetch(`/updateOrderStatus/${orderId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status: 'Returned' })
        });
        const result = await response.json();
        if (result.success) {
            Swal.fire({
                title: 'Returned!',
                text: 'The order has been returned successfully.',
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                title: 'Failed!',
                text: 'Failed to return the order. Please try again.',
                icon: 'error',
                confirmButtonText: 'OK'
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: 'An error occurred while processing your request.',
            icon: 'error',
            confirmButtonText: 'OK'
        });
    }
}

</script>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendor/modernizr-3.11.7.min.js"></script>
    <!-- jquery -->
    <script src="/assets/js/vendor/jquery-v3.6.0.min.js"></script>
    <!-- Popper JS -->
    <script src="/assets/js/vendor/popper.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/js/vendor/bootstrap.min.js"></script>
    <script src="/assets/js/plugins/owl-carousel.js"></script>
    <script src="/assets/js/plugins/slick.js"></script>
    <script src="/assets/js/plugins/jarallax.min.js"></script>
    <script src="/assets/js/plugins/countdown.js"></script>
    <script src="/assets/js/plugins/magnific-popup.js"></script>
    <script src="/assets/js/plugins/instafeed.js"></script>
    <script src="/assets/js/plugins/tilt.js"></script>
    <script src="/assets/js/plugins/images-loaded.js"></script>
    <script src="/assets/js/plugins/isotope.js"></script>
    <script src="/assets/js/plugins/scrolloverflow-fullpage.js"></script>
    <script src="/assets/js/plugins/fullpage.js"></script>
    <script src="/assets/js/plugins/jquery-ui.js"></script>
    <script src="/assets/js/plugins/jquery-ui-touch-punch.js"></script>
    <script src="/assets/js/plugins/easyzoom.js"></script>
    <script src="/assets/js/plugins/resizesensor.js"></script>
    <script src="/assets/js/plugins/sticky-sidebar.js"></script>
    <script src="/assets/js/plugins/scrollup.js"></script>
    <script src="/assets/js/plugins/select2.min.js"></script>
    <script src="/assets/js/plugins/cookie.js"></script>
    <script src="/assets/js/plugins/bpopup.js"></script>
    <script src="/assets/js/plugins/wow.js"></script>
    <script src="/assets/js/plugins/ajax-mail.js"></script>
    <!-- Main JS -->
    <script src="/assets/js/main.js"></script>
  </body>

  <!-- Mirrored from template.hasthemes.com/toro/toro/my-account.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 09 Feb 2024 11:20:00 GMT -->
</html>























<style>
  .dashboard-content {
      width: 100%;
      padding: 20px;
      background-color: #f8f9fa;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .card-header h5 {
      font-weight: 600;
      color: #333;
  }

  .table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 15px;
  }

  .table thead th {
      background-color: #ec7070;
      color: #fff;
      font-weight: 600;
      text-align: center;
      padding: 12px;
      border-top: none;
  }

  .table tbody td {
      padding: 12px;
      text-align: center;
      vertical-align: middle;
      border-bottom: 1px solid #e9ecef;
  }

  .table tbody tr:hover {
      background-color: #f1f3f5;
      transition: background-color 0.3s ease;
  }

  .badge {
      font-size: 0.875em;
      padding: 0.4em 0.8em;
      border-radius: 8px;
      text-transform: capitalize;
  }

  .alert-danger {
      background-color: #ff4d4d;
      color: #fff;
  }

  .alert-success {
      background-color: #28a745;
      color: #fff;
  }

  .alert-primary {
      background-color: #007bff;
      color: #fff;
  }

  .alert-warning {
      background-color: #ffc107;
      color: #212529;
  }

  .btn-sm.font-sm {
      font-size: 0.875em;
      padding: 8px 12px;
      color: #ffffff;
      background-color: #818162;
      border: 1px solid #818162;
      border-radius: 5px;
      transition: background-color 0.3s ease, color 0.3s ease;
  }

  .btn-sm.font-sm:hover {
      background-color: #d9d9b1;
      color: #fff;
  }

  .text-end {
      text-align: right !important;
  }
</style>

<style>
  body {
    font-family: 'Roboto', sans-serif;
    background-color: #f6f6e6;
    color: #333;
    line-height: 1.6;
    margin: 0;
    padding: 0;
  }
  .dashboard-container {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 2rem;
  }
  .dashboard-title {
    font-family: 'Playfair Display', serif !important;
    font-size: 2.5rem;
    color: #2c3e50;
    text-align: center;
    margin-bottom: 2rem;
  }
  .dashboard-menu {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }
  .dashboard-item {
    background-color: #fffff3;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }
  .dashboard-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }
  .dashboard-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1.5rem;
    text-decoration: none;
    color: #333;
  }
  .dashboard-icon {
    font-size: 2rem;
    margin-bottom: 1rem;
  }
  .dashboard-text {
    font-size: 1.1rem;
    font-weight: 500;
    text-align: center;
  }
  .active {
    background-color:  transparent;
    color: #ffffff;
  }
  .active .dashboard-icon,
  .active .dashboard-text {
    color: #ffffff;
  }
</style>
<br><br>
<h1>My Address</h1>
<br>
<div class="container">
  <div class="row" style="margin: 40px;">
    <% if (address && address.addressDetails.length > 0) { %>
      <% address.addressDetails.forEach(function(detail, index) { %>
        <!-- Start each card -->
        <div class="col-md-3" style="margin-bottom: 20px;">
          <div class="card" style="padding: 20px; border: 1px solid #ddd; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); position: relative;">
            <!-- Delete Link -->
            <a href="/userAddress/delete/<%= detail._id %>" class="btn btn-danger btn-sm" style="position: absolute; top: 10px; right: 10px; color: red; background-color: #ffffff;border-color: #ffffff; text-decoration: none; font-weight: bold;">
              <i class="fa fa-times" style="color: #393925 !important;"></i> <!-- Font Awesome cross icon -->
            </a>
            <div class="card-body">
              <h5 class="card-title" style="font-weight: bold;"><%= detail.fullName %></h5>
              <p class="card-text" style="margin-bottom: 10px;">
                <%= detail.city %>, <%= detail.state %><br>
                <%= detail.country %>, <%= detail.postalCode %>
              </p>
              <p class="card-text" style="margin-bottom: 10px;">
                Email: <%= detail.email %>
              </p>
              <p class="card-text" style="margin-bottom: 20px;">
                Mobile: <%= detail.number %>
              </p>
              <button style="background-color: #818162; border-color: #818162; color : white; width:163px" class="edit-address-btn" data_id="<%= detail._id %>" " data-fullname="<%= detail.fullName %>" data-city="<%= detail.city %>" data-state="<%= detail.state %>" data-postalcode="<%= detail.postalCode %>" data-country="<%= detail.country %>" data-number="<%= detail.number %>" data-email="<%= detail.email %>" data-bs-toggle="modal" data-bs-target="#editAddressModal">Edit</button>
            </div>
          </div>
        </div>
        <!-- Every 4th card, clear the row -->
        <% if ((index + 1) % 4 === 0) { %>
          <div class="w-100"></div>
        <% } %>
      <% }) %>
    <% } else { %>
      <p>No addresses available.</p>
    <% } %>

    <!-- Add Address Button (positioned after the last card) -->
    <div class="col-md-3" style="margin-bottom: 20px;">
      <div class="card text-center" style="padding: 20px; border: 1px solid #ddd; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <a href="#" class="btn" data-bs-toggle="modal" data-bs-target="#addAddressModal"
          style="font-size: 40px; padding: 10px; border-width: 2px; width: 100%; border-color: #818162; color: #818162; background-color: transparent;">
          <i class="fa fa-plus"></i>
        </a>
        <div class="card-body">
          <h5 class="card-title" style="font-weight: normal;">Add New Address</h5>
        </div>
      </div>
    </div>
  </div>
</div>




          <!-- TO ADD ADDRESS  -->

            
          <div class="modal fade" id="addAddressModal" tabindex="-1" aria-labelledby="addAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addAddressModalLabel">Add New Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="addressForm" action="/userAddress" method="post">
                        <div class="modal-body">
                            <div id="error-message" style="color: red; margin-bottom: 15px;"></div>
                            <div class="mb-3">
                                <label for="fullName" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="fullName" name="fullName" required>
                            </div>
                            <div class="mb-3">
                                <label for="city" class="form-label">City</label>
                                <input type="text" class="form-control" id="city" name="city" required>
                            </div>
                            <div class="mb-3">
                                <label for="state" class="form-label">State/Province/Region</label>
                                <input type="text" class="form-control" id="state" name="state" required>
                            </div>
                            <div class="mb-3">
                                <label for="postalCode" class="form-label">Postal Code</label>
                                <input type="tel" class="form-control" id="postalCode" name="postalCode" required>
                            </div>
                            <div class="mb-3">
                                <label for="country" class="form-label">Country</label>
                                <input type="text" class="form-control" id="country" name="country" required>
                            </div>
                            <div class="mb-3">
                                <label for="mobileNumber" class="form-label">Mobile Number</label>
                                <input type="tel" class="form-control" id="mobileNumber" name="number" required>
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email" name="email">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save Address</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Edit Address Modal -->
        <div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editAddressModalLabel">Update Address</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="editAddressForm" action="/userAddress/edit/" method="post">
                        <div class="modal-body">
                            <div id="error-message" style="color: red; margin-bottom: 15px;"></div>
                            <div class="mb-3">
                                <label for="editfullName" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="editfullName" name="fullName" required>
                            </div>
                            <div class="mb-3">
                                <label for="editcity" class="form-label">City</label>
                                <input type="text" class="form-control" id="editcity" name="city" required>
                            </div>
                            <div class="mb-3">
                                <label for="editstate" class="form-label">State/Province/Region</label>
                                <input type="text" class="form-control" id="editstate" name="state" required>
                            </div>
                            <div class="mb-3">
                                <label for="editpostalCode" class="form-label">Postal Code</label>
                                <input type="text" class="form-control" id="editpostalCode" name="postalCode" required>
                            </div>
                            <div class="mb-3">
                                <label for="editcountry" class="form-label">Country</label>
                                <input type="text" class="form-control" id="editcountry" name="country" required>
                            </div>
                            <div class="mb-3">
                                <label for="editmobileNumber" class="form-label">Mobile Number</label>
                                <input type="text" class="form-control" id="editmobileNumber" name="number" required>
                            </div>
                            <div class="mb-3">
                                <label for="editemail" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="editemail" name="email">
                            </div>
                            <input type="hidden" class="form-control" id="edit_id" name="id">
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Update Address</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- <script>
            // Function to show alerts using SweetAlert
            function showAlert(icon, title, text) {
        Swal.fire({
            icon: icon,
            title: title,
            text: text,
            position: 'top-end',
            toast: true,
            timer: 3000,
            showConfirmButton: false,
        });
    }
            const messages = <%- JSON.stringify(messages) %>;
    if (messages.success.length > 0) {
        showAlert('success', 'Success', messages.success);
    }
    if (messages.error.length > 0) {
        showAlert('error', 'Error', messages.error);
    }
    if (messages.addressSuccess.length > 0) {
        showAlert('success', 'Success', messages.addressSuccess);
    }
          
            function validateForm(fullName, city, state, postalCode, country, mobileNumber, email) {
               
                if (!fullName || !city || !state || !postalCode || !country || !mobileNumber) {
                    showAlert('error', 'Missing Fields', 'Please fill in all required fields.');
                    return false; 
                }
        
     
                const postalCodePattern = /^[0-9]+$/;
                if (!postalCodePattern.test(postalCode)) {
                    showAlert('error', 'Invalid Postal Code', 'Postal Code must contain only numbers.');
                    return false; // Invalid
                }
        
                // Validate mobile number length
                if (mobileNumber.length !== 10) {
                    showAlert('error', 'Invalid Mobile Number', 'Please enter a valid 10-digit mobile number.');
                    return false; // Invalid
                }
        
                // Validate email format
                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (email && !emailPattern.test(email)) {
                    showAlert('error', 'Invalid Email', 'Please enter a valid email address.');
                    return false; // Invalid
                }
        
                return true; // Valid
            }
        
            // General form submission handler
            function handleFormSubmission(formId) {
                document.getElementById(formId).addEventListener('submit', function(event) {
                    event.preventDefault(); // Prevent form default submission
        
                    // Get form values and trim whitespace
                    const fullName = document.getElementById('editfullName').value.trim();
                    const city = document.getElementById('editcity').value.trim();
                    const state = document.getElementById('editstate').value.trim();
                    const postalCode = document.getElementById('editpostalCode').value.trim();
                    const country = document.getElementById('editcountry').value.trim();
                    const mobileNumber = document.getElementById('editmobileNumber').value.trim();
                    const email = document.getElementById('editemail').value.trim();
                    const id = document.getElementById('edit_id').value.trim();
        
                    // Validate form inputs
                    if (validateForm(fullName, city, state, postalCode, country, mobileNumber, email)) {
                        // If all validation passes, submit the form
                        this.submit();
                    }
                });
            }
        
            // Initialize form submission handlers
            handleFormSubmission('editAddressForm');
        
            // Populate modal fields when edit button is clicked
            document.querySelectorAll('.edit-address-btn').forEach(button => {
                button.addEventListener('click', function() {
                    // Get the data attributes
                    const fullName = this.getAttribute('data-fullname');
                    const city = this.getAttribute('data-city');
                    const state = this.getAttribute('data-state');
                    const postalCode = this.getAttribute('data-postalcode');
                    const country = this.getAttribute('data-country');
                    const mobileNumber = this.getAttribute('data-number');
                    const email = this.getAttribute('data-email');
                    const id = this.getAttribute('data_id');
        
                    // Populate the modal fields
                    document.getElementById('editfullName').value = fullName;
                    document.getElementById('editcity').value = city;
                    document.getElementById('editstate').value = state;
                    document.getElementById('editpostalCode').value = postalCode;
                    document.getElementById('editcountry').value = country;
                    document.getElementById('editmobileNumber').value = mobileNumber;
                    document.getElementById('editemail').value = email;
                    document.getElementById('edit_id').value = id;
                });
            });
        </script> -->
        <script>
            // Function to show alerts using SweetAlert
            function showAlert(icon, title, text) {
                Swal.fire({
                    icon: icon,
                    title: title,
                    text: text,
                    position: 'top-end',
                    toast: true,
                    timer: 3000,
                    showConfirmButton: false,
                });
            }
        
            const messages = <%- JSON.stringify(messages) %>;
            if (messages.success.length > 0) {
                showAlert('success', 'Success', messages.success);
            }
            if (messages.error.length > 0) {
                showAlert('error', 'Error', messages.error);
            }
            if (messages.addressSuccess.length > 0) {
                showAlert('success', 'Success', messages.addressSuccess);
            }
        
            function validateForm(fullName, city, state, postalCode, country, mobileNumber, email) {
                // Name must contain only letters and spaces
                const namePattern = /^[A-Za-z\s]+$/;
                if (!namePattern.test(fullName)) {
                    showAlert('error', 'Invalid Name', 'Name must contain only letters and spaces.');
                    return false;
                }
        
                // City, state, and country should only have letters and spaces
                if (!namePattern.test(city) || !namePattern.test(state) || !namePattern.test(country)) {
                    showAlert('error', 'Invalid Location', 'City, State, and Country must contain only letters and spaces.');
                    return false;
                }
        
                // Postal code must be exactly 6 digits
                const postalCodePattern = /^[0-9]{6}$/;
                if (!postalCodePattern.test(postalCode)) {
                    showAlert('error', 'Invalid Postal Code', 'Postal Code must be exactly 6 digits.');
                    return false;
                }
        
                // Mobile number must be exactly 10 digits
                const mobilePattern = /^[0-9]{10}$/;
                if (!mobilePattern.test(mobileNumber)) {
                    showAlert('error', 'Invalid Mobile Number', 'Mobile number must be exactly 10 digits.');
                    return false;
                }
        
                // Validate email format
                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (email && !emailPattern.test(email)) {
                    showAlert('error', 'Invalid Email', 'Please enter a valid email address.');
                    return false;
                }
        
                return true; // Valid
            }
        
            // General form submission handler
            function handleFormSubmission(formId) {
                document.getElementById(formId).addEventListener('submit', function(event) {
                    event.preventDefault(); // Prevent form default submission
        
                    // Get form values and trim whitespace
                    const fullName = document.getElementById('editfullName').value.trim();
                    const city = document.getElementById('editcity').value.trim();
                    const state = document.getElementById('editstate').value.trim();
                    const postalCode = document.getElementById('editpostalCode').value.trim();
                    const country = document.getElementById('editcountry').value.trim();
                    const mobileNumber = document.getElementById('editmobileNumber').value.trim();
                    const email = document.getElementById('editemail').value.trim();
                    const id = document.getElementById('edit_id').value.trim();
        
                    // Validate form inputs
                    if (validateForm(fullName, city, state, postalCode, country, mobileNumber, email)) {
                        // If all validation passes, submit the form
                        this.submit();
                    }
                });
            }
        
            // Initialize form submission handlers
            handleFormSubmission('editAddressForm');
        
            // Populate modal fields when edit button is clicked
            document.querySelectorAll('.edit-address-btn').forEach(button => {
                button.addEventListener('click', function() {
                    // Get the data attributes
                    const fullName = this.getAttribute('data-fullname');
                    const city = this.getAttribute('data-city');
                    const state = this.getAttribute('data-state');
                    const postalCode = this.getAttribute('data-postalcode');
                    const country = this.getAttribute('data-country');
                    const mobileNumber = this.getAttribute('data-number');
                    const email = this.getAttribute('data-email');
                    const id = this.getAttribute('data_id');
        
                    // Populate the modal fields
                    document.getElementById('editfullName').value = fullName;
                    document.getElementById('editcity').value = city;
                    document.getElementById('editstate').value = state;
                    document.getElementById('editpostalCode').value = postalCode;
                    document.getElementById('editcountry').value = country;
                    document.getElementById('editmobileNumber').value = mobileNumber;
                    document.getElementById('editemail').value = email;
                    document.getElementById('edit_id').value = id;
                });
            });
        </script>
        
        
        
        <script>
            document.getElementById('addressForm').addEventListener('submit', function (event) {
                event.preventDefault(); // Prevent form submission
        
                const errorMessageDiv = document.getElementById('error-message');
                errorMessageDiv.innerText = ''; // Clear any existing error messages
        
                // Get form fields
                const fullName = document.getElementById('fullName').value.trim();
                const city = document.getElementById('city').value.trim();
                const state = document.getElementById('state').value.trim();
                const postalCode = document.getElementById('postalCode').value.trim();
                const country = document.getElementById('country').value.trim();
                const mobileNumber = document.getElementById('mobileNumber').value.trim();
                const email = document.getElementById('email').value.trim();
        
                // Validation checks
                const namePattern = /^[A-Za-z\s]+$/;
                if (!fullName || !namePattern.test(fullName)) {
                    errorMessageDiv.innerText = 'Full Name is required and must contain only letters and spaces.';
                    return;
                }
        
                if (!city || !namePattern.test(city)) {
                    errorMessageDiv.innerText = 'City is required and must contain only letters and spaces.';
                    return;
                }
        
                if (!state || !namePattern.test(state)) {
                    errorMessageDiv.innerText = 'State/Province/Region is required and must contain only letters and spaces.';
                    return;
                }
        
                const postalCodePattern = /^\d{6}$/;
                if (!postalCodePattern.test(postalCode)) {
                    errorMessageDiv.innerText = 'Postal Code must be exactly 6 digits.';
                    return;
                }
        
                if (!country || !namePattern.test(country)) {
                    errorMessageDiv.innerText = 'Country is required and must contain only letters and spaces.';
                    return;
                }
        
                const mobilePattern = /^\d{10}$/;
                if (!mobilePattern.test(mobileNumber)) {
                    errorMessageDiv.innerText = 'Mobile Number must be exactly 10 digits.';
                    return;
                }
        
                const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (email && !emailPattern.test(email)) {
                    errorMessageDiv.innerText = 'Invalid Email Address format.';
                    return;
                }
        
                // If validation passes, submit the form
                this.submit();
            });
        </script>
        
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/js/vendor/modernizr-3.11.7.min.js"></script>
    <!-- jquery -->
    <script src="/assets/js/vendor/jquery-v3.6.0.min.js"></script>
    <!-- Popper JS -->
    <script src="/assets/js/vendor/popper.js"></script>
    <!-- Bootstrap JS -->
    <script src="/assets/js/vendor/bootstrap.min.js"></script>
    <script src="/assets/js/plugins/owl-carousel.js"></script>
    <script src="/assets/js/plugins/slick.js"></script>
    <script src="/assets/js/plugins/jarallax.min.js"></script>
    <script src="/assets/js/plugins/countdown.js"></script>
    <script src="/assets/js/plugins/magnific-popup.js"></script>
    <script src="/assets/js/plugins/instafeed.js"></script>
    <script src="/assets/js/plugins/tilt.js"></script>
    <script src="/assets/js/plugins/images-loaded.js"></script>
    <script src="/assets/js/plugins/isotope.js"></script>
    <script src="/assets/js/plugins/scrolloverflow-fullpage.js"></script>
    <script src="/assets/js/plugins/fullpage.js"></script>
    <script src="/assets/js/plugins/jquery-ui.js"></script>
    <script src="/assets/js/plugins/jquery-ui-touch-punch.js"></script>
    <script src="/assets/js/plugins/easyzoom.js"></script>
    <script src="/assets/js/plugins/resizesensor.js"></script>
    <script src="/assets/js/plugins/sticky-sidebar.js"></script>
    <script src="/assets/js/plugins/scrollup.js"></script>
    <script src="/assets/js/plugins/select2.min.js"></script>
    <script src="/assets/js/plugins/cookie.js"></script>
    <script src="/assets/js/plugins/bpopup.js"></script>
    <script src="/assets/js/plugins/wow.js"></script>
    <script src="/assets/js/plugins/ajax-mail.js"></script>
    <script src="/assets/js/main.js"></script>
  </body>
  <%- include('footer') %>
  <!-- Mirrored from template.hasthemes.com/toro/toro/my-account.html by HTTrack Website Copier/3.x [XR&CO'2014], Fri, 09 Feb 2024 11:20:00 GMT -->
</html>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  function confirmLogout() {
    Swal.fire({
      title: 'Are you sure?',
      text: "You will be logged out!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, logout!',
      cancelButtonText: 'Cancel',
      confirmButtonColor: 'black',  // Green button for confirmation
  cancelButtonColor: 'black',   // Red button for cancellation
  background: '#f8f9fa',  // Light background
  iconColor: '#dc3545',
    }).then((result) => {
      if (result.isConfirmed) {
        // Redirect to logout page
        window.location.href = '/logout';
      }
    });
  }
</script>



















