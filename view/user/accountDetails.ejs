

<%- include('header.ejs') %>
<style>
  
  :root {
  --primary-color: #818162; /* Muted olive green */
  --secondary-color: transparent; /* Light beige */
  --accent-color: #000000; /* Black for strong contrasts */
  
  --background-color: transparent; /* Soft beige background */
  --text-color: #000000; /* Black text for readability */
  
  --card-background: #ffffff; /* White card for clean design */
  --border-color: #818162; /* Border matching primary color */
  
  --success-color: #818162; /* Using olive green for success */
  --danger-color: #ff6b6b; /* Red for danger */
}

/* Body styles */
body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
}

/* Card styles */
.card {
  background-color: var(--card-background);
  border: 1px solid var(--border-color);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  padding: 16px;
  color: var(--text-color);
}

/* Button styles */
button {
  background-color: var(--primary-color);
  color: var(--secondary-color);
  border: none;
  padding: 10px 16px;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: var(--accent-color);
  color: var(--primary-color);
}

/* Alert styles */
.alert {
  padding: 15px;
  margin: 10px 0;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  background-color: var(--success-color);
  color: var(--secondary-color);
}

.alert-danger {
  background-color: var(--danger-color);
}










  body {
    font-family: 'Lato', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    line-height: 1.6;
    transition: all 0.3s ease;
  }

  .container {
    max-width: 1000px;
    margin: 3rem auto;
    padding: 2rem;
  }

  h2 {
    font-family: 'Playfair Display', serif;
    color: var(--primary-color);
    margin-bottom: 1.5rem;
    font-size: 2.5rem;
    font-weight: 700;
    letter-spacing: 0.5px;
  }

  .account-section {
    background-color: var(--card-background);
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
    transition: all 0.3s ease;
  }

  .account-section:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
  }

  .wallet-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
  }

  .wallet-balance {
    font-size: 2rem;
    font-weight: 700;
    color: var(--secondary-color);
    transition: color 0.3s ease;
  }

  .wallet-balance:hover {
    color: var(--primary-color);
  }

  .table-container {
    background-color: var(--card-background);
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  }

  .table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
  }

  .table th, .table td {
    padding: 1.2rem;
    text-align: left;
    border-bottom: 1px solid #e0e0e0;
  }

  .table th {
    background-color: var(--primary-color);
    color: #ffffff;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.9rem;
    letter-spacing: 0.5px;
  }

  .table tbody tr {
    transition: background-color 0.3s ease;
  }

  .table tbody tr:hover {
    background-color: rgba(91, 192, 190, 0.1);
  }

  .badge {
    padding: 0.5em 1em;
    border-radius: 50px;
    font-weight: 600;
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    transition: all 0.3s ease;
  }

  .badge-danger {
    background-color: var(--danger-color);
    color: #ffffff;
  }

  .badge-success {
    background-color: var(--success-color);
    color: #ffffff;
  }

  .badge:hover {
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem;
    }

    .wallet-info {
      flex-direction: column;
      align-items: flex-start;
    }

    .wallet-balance {
      margin-top: 1rem;
    }

    .table th, .table td {
      padding: 1rem 0.75rem;
    }
  }
  h1 {
      font-family: 'Playfair Display', serif;
      font-size: 2.5rem;
      color: #2c3e50;
      text-align: center;
      margin-bottom: 2rem;
  }
  h2 {
      font-family: 'Playfair Display', serif;
    
      color: #444438;
      text-align: start;
    font-size: 26px;
      margin-bottom: 2rem;
      font-weight: 100;
  }
 

</style>
<br><br>
<h1>Acc Details</h1>


<div class="container-fluid">
  <form action="/accountDetails/userDetails" method="post" id="userDetailsForm">
    <div class="row justify-content-center align-items-center">
      <div class="col-12 col-md-8 col-lg-6">
        <p style="color: green"><%= success %></p>

        <!-- Email Address (disabled) -->
        <div class="single-input-item">
          <label for="email" class="required" style="display: block; margin-bottom: 5px">Email Address *</label>
          <input
            name="email"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px"
            type="email"
            id="email"
            value="<%= acc.email %>"
            disabled
          />
        </div>

        <!-- User Name -->
        <div class="single-input-item">
          <label for="display-name" class="required" style="display: block; margin-bottom: 5px">User Name *</label>
          <input
            name="name"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px"
            type="text"
            id="display-name"
            value="<%= acc.name %>"
            required
          />
        </div>

        <!-- Phone Number -->
        <div class="single-input-item">
          <label for="phone-number" class="required" style="display: block; margin-bottom: 5px">Phone Number *</label>
          <input
            name="number"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px"
            type="text"
            id="phone-number"
            value="<%= acc.number %>"
            required
          />
        </div>

        <!-- Save Changes Button -->
        <div class="single-input-item text-center">
          <button
            type="submit"
            id="saveChangesBtn"
            class="check-btn sqr-btn"
            style="background-color: #636348; color: white; border: none; padding: 10px 20px; display: block; margin: 20px auto; text-align: center; cursor: pointer;"
          >
            Save Changes
          </button>
        </div>
      </div>
    </div>
  </form>
</div>

<div class="container-fluid">
  <form id="update-password-form" action="/accountDetails/updatepassword" method="post">
    <div class="row justify-content-center align-items-center">
      <div class="col-12 col-md-8 col-lg-6">
        <h2 class="text-center">Change Password</h2>
        <!-- Server-Side Success/Error Messages -->
        <p style="color: green"><%= successPass %></p>
        <p style="color: red"><%= errorPassword %></p>

        <!-- Error Message Container -->
        <span
          id="errorPass"
          class="error-message"
          style="color: red; display: block; margin-bottom: 10px"
        ></span>

        <!-- Current Password -->
        <div class="single-input-item">
          <label for="current-password" class="required" style="display: block; margin-bottom: 5px">Current Password *</label>
          <input
            name="currentPassword"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px;"
            type="password"
            id="current-password"
            
          />
        </div>

        <!-- New Password -->
        <div class="single-input-item">
          <label for="new-password" class="required" style="display: block; margin-bottom: 5px">New Password *</label>
          <input
            name="newPassword"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px;"
            type="password"
            id="new-password"
            
          />
        </div>

        <!-- Confirm Password -->
        <div class="single-input-item">
          <label for="confirm-password" class="required" style="display: block; margin-bottom: 5px">Confirm Password *</label>
          <input
            name="confirmPassword"
            style="border-color: black; background-color: transparent; width: 100%; display: block; margin-bottom: 15px;"
            type="password"
            id="confirm-password"
            
          />
        </div>

        <!-- Save Changes Button -->
        <div class="single-input-item text-center">
          <button
            type="submit"
            class="check-btn sqr-btn"
            style="background-color: #636348; color: white; border: none; padding: 10px 20px; display: block; margin: 20px auto; text-align: center; cursor: pointer;"
          >
            Save Changes
          </button>
        </div>
      </div>
    </div>
  </form>
</div>

<script>
  document.getElementById("update-password-form").addEventListener("submit", async function (event) {
    event.preventDefault();

    const currentPassword = document.getElementById("current-password").value.trim();
    const newPassword = document.getElementById("new-password").value.trim();
    const confirmPassword = document.getElementById("confirm-password").value.trim();

    const errorElement = document.getElementById("errorPass");
    errorElement.textContent = ""; 

    let isValid = true;

    // Validation
    if (!currentPassword || !newPassword || !confirmPassword) {
      errorElement.textContent = "All fields are required!";
      isValid = false;
    }

    const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{8,}$/;
    if (!passwordPattern.test(newPassword)) {
      errorElement.textContent = "Password must be at least 8 characters, include one letter, one number, and one special character!";
      isValid = false;
    }

    if (newPassword !== confirmPassword) {
      errorElement.textContent = "Confirm password does not match the new password!";
      isValid = false;
    }

    if (!isValid) return;

    // Submit form data
    try {
      const response = await fetch("/accountDetails/updatepassword", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
      });

      const result = await response.json();

      if (result.success) {
        Swal.fire({
          icon: "success",
          title: "Success!",
          text: result.message || "Password updated successfully!",
          confirmButtonText: "OK",
        }).then(() => {
          window.location.href = "/accountDetails";
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: result.message || "Something went wrong. Please try again.",
          confirmButtonText: "OK",
        });
      }
    } catch (error) {
      Swal.fire({
        icon: "error",
        title: "Error",
        text: "An unexpected error occurred. Please try again later.",
        confirmButtonText: "OK",
      });
    }
  });
</script>


<!-- SweetAlert CDN -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>





<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('userDetailsForm');
    const saveChangesBtn = document.getElementById('saveChangesBtn');
    const nameInput = document.getElementById("display-name");
    const phoneInput = document.getElementById("phone-number");
    let formChanged = false;

    form.addEventListener('input', function () {
      formChanged = true;
    });

    form.addEventListener("submit", function (event) {
      event.preventDefault();

      const namePattern = /^[a-zA-Z]+$/;
      if (!namePattern.test(nameInput.value)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Input',
          text: 'User name must only contain letters.',
          confirmButtonText: 'OK'
        });
        return;
      }

      const phonePattern = /^\d{10}$/;
      if (!phonePattern.test(phoneInput.value)) {
        Swal.fire({
          icon: 'error',
          title: 'Invalid Input',
          text: 'Phone number must be exactly 10 digits long and contain numbers only.',
          confirmButtonText: 'OK'
        });
        return;
      }

      if (!nameInput.value || !phoneInput.value) {
        Swal.fire({
          icon: 'error',
          title: 'Missing Information',
          text: 'All fields are required.',
          confirmButtonText: 'OK'
        });
        return;
      }

      if (formChanged) {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'success',
          title: 'Changes saved successfully!',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });

        setTimeout(() => {
          form.submit();
        }, 1000);
      } else {
        Swal.fire({
          toast: true,
          position: 'top-end',
          icon: 'info',
          title: 'No changes made!',
          showConfirmButton: false,
          timer: 3000,
          timerProgressBar: true,
        });
      }
    });
  });
</script>


</body>
<%- include('footer') %>
</html>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
  function confirmLogout() {
    Swal.fire({
      title: 'Are you sure?',
      text: "You will be logged out!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, logout!',
      cancelButtonText: 'Cancel',
      confirmButtonColor: 'black',  // Green button for confirmation
  cancelButtonColor: 'black',   // Red button for cancellation
  background: '#f8f9fa',  // Light background
  iconColor: '#dc3545',
    }).then((result) => {
      if (result.isConfirmed) {
        // Redirect to logout page
        window.location.href = '/logout';
      }
    });
  }
</script>

